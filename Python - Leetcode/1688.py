'''
1688. Count of Matches in Tournament

n이 짝수이면, 결과값에 n / 2 값을 더하고, 
n이 홀수이면, 결과값에 (n - 1) / 2 값을 더해야한다.

이때, 어짜피 경기수는 정수이기 때문에 n이 짝수던 홀수이던 n // 2를 더해도 된다.

그리고, 경기가 끝나면 팀 수가 절반으로 줄어드는데,
이때 짝수이면 n // 2가 되고, 홀수이면, n // 2 + 1이 된다.
이 부분을 한번에 계산하기 위해 비트연산자(&)를 사용했다.

n = n // 2 + (n & 1)
> n이 홀수이면, n & 1은 1이고, n이 짝수이면 n & 1이 0이라 간단히 if문 없이 계산이 된다.

추가적으로, 심플한 답변은 그냥 return n - 1 하는 것이다.
> n개의 팀이 1개로 변하기 위해서는, n - 1번 경기를 하면 된다.
* 예를 들어, 1번 팀이 n번 팀까지 한번씩 다 이긴다고 가정하면 n - 1번이다.
'''

lass Solution:
    def numberOfMatches(self, n: int) -> int:
        ans = 0
        while n > 1:
            ans += n // 2 
            n = n // 2 + (n & 1)
        return ans